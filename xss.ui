<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>xss_window</class>
 <widget class="QMainWindow" name="xss_window">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>800</width>
    <height>600</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>MainWindow</string>
  </property>
  <widget class="QWidget" name="centralwidget">
   <widget class="QFrame" name="f7">
    <property name="geometry">
     <rect>
      <x>0</x>
      <y>0</y>
      <width>791</width>
      <height>581</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">background-color: rgb(255, 255, 255);</string>
    </property>
    <property name="frameShape">
     <enum>QFrame::StyledPanel</enum>
    </property>
    <property name="frameShadow">
     <enum>QFrame::Raised</enum>
    </property>
    <widget class="QPushButton" name="back">
     <property name="geometry">
      <rect>
       <x>10</x>
       <y>10</y>
       <width>75</width>
       <height>23</height>
      </rect>
     </property>
     <property name="font">
      <font>
       <family>Rockwell Condensed</family>
       <pointsize>10</pointsize>
       <weight>75</weight>
       <bold>true</bold>
      </font>
     </property>
     <property name="cursor">
      <cursorShape>PointingHandCursor</cursorShape>
     </property>
     <property name="text">
      <string>Back</string>
     </property>
     <property name="icon">
      <iconset>
       <normaloff>back1600.png</normaloff>back1600.png</iconset>
     </property>
    </widget>
    <widget class="QLabel" name="label">
     <property name="geometry">
      <rect>
       <x>120</x>
       <y>20</y>
       <width>631</width>
       <height>51</height>
      </rect>
     </property>
     <property name="font">
      <font>
       <family>Rockwell Condensed</family>
       <pointsize>24</pointsize>
       <weight>75</weight>
       <italic>true</italic>
       <bold>true</bold>
      </font>
     </property>
     <property name="cursor">
      <cursorShape>ArrowCursor</cursorShape>
     </property>
     <property name="styleSheet">
      <string notr="true">background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(142, 192, 52, 255), stop:1 rgba(255, 255, 255, 255));</string>
     </property>
     <property name="text">
      <string>          4. Cross-Site Scripting (XSS) </string>
     </property>
    </widget>
    <widget class="QLabel" name="label_2">
     <property name="geometry">
      <rect>
       <x>20</x>
       <y>80</y>
       <width>761</width>
       <height>371</height>
      </rect>
     </property>
     <property name="font">
      <font>
       <family>Rockwell</family>
       <pointsize>11</pointsize>
      </font>
     </property>
     <property name="text">
      <string>         In an SQL injection attack, an attacker goes after a vulnerable website to target its stored data, such
 as user credentials or sensitive financial data. But if the attacker would rather directly target a website's
users, they may opt for a cross-site scripting attack. Similar to an SQL injection attack, this attack also
involves injecting malicious code into a website, but in this case the website itself is not being attacked.
Instead, the malicious code the attacker has injected only runs in the user's browser when they visit the 
attacked website, and it goes after the visitor directly, not the website.

          One of the most common ways an attacker can deploy a cross-site scripting attack is by injecting
malicious code into a comment or a script that could automatically run. For example, they could embed 
a link to a malicious JavaScript in a comment on a blog. 

           Cross-site scripting attacks can significantly damage a website’s reputation by placing the users' 
information at risk without any indication that anything malicious even occurred. Any sensitive information 
a user sends to the site—such as their credentials, credit card information, or other private data—can be 
hijacked via cross-site scripting without the website owners realizing there was even a 
problem in the first place.</string>
     </property>
    </widget>
   </widget>
  </widget>
  <widget class="QMenuBar" name="menubar">
   <property name="geometry">
    <rect>
     <x>0</x>
     <y>0</y>
     <width>800</width>
     <height>21</height>
    </rect>
   </property>
  </widget>
  <widget class="QStatusBar" name="statusbar"/>
 </widget>
 <resources/>
 <connections/>
</ui>
